--- original/net/minecraft/client/renderer/RenderGlobal.java
+++ changed/net/minecraft/client/renderer/RenderGlobal.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.renderer;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.render.RenderEntitiesEvent;
+import cc.hyperium.internal.MemoryHelper;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -24,7 +28,9 @@
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.ISound;
 import net.minecraft.client.audio.PositionedSoundRecord;
+import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.multiplayer.WorldClient;
+import net.minecraft.client.network.NetworkPlayerInfo;
 import net.minecraft.client.particle.EntityFX;
 import net.minecraft.client.renderer.BlockRendererDispatcher;
 import net.minecraft.client.renderer.ChunkRenderContainer;
@@ -530,6 +536,7 @@
             this.entityOutlineFramebuffer.framebufferClear();
             this.entityOutlineFramebuffer.bindFramebuffer(false);
             this.theWorld.theProfiler.endStartSection("entityOutlines");
+            EventBus.INSTANCE.post(new RenderEntitiesEvent(partialTicks));
             RenderHelper.disableStandardItemLighting();
             this.renderManager.setRenderOutlines(true);
 
@@ -1206,6 +1213,7 @@
    }
 
    public void renderClouds(float partialTicks, int pass) {
+      if (Hyperium.INSTANCE.getHandlers().getCloudHandler().renderClouds(cloudTickCounter, partialTicks)) return;
       if(this.mc.theWorld.provider.isSurfaceWorld()) {
          if(this.mc.gameSettings.shouldRenderClouds() == 2) {
             this.renderCloudsFancy(partialTicks, pass);
@@ -1533,7 +1541,7 @@
       GlStateManager.tryBlendFuncSeparate(774, 768, 1, 0);
       GlStateManager.enableBlend();
       GlStateManager.color(1.0F, 1.0F, 1.0F, 0.5F);
-      GlStateManager.doPolygonOffset(-3.0F, -3.0F);
+      GlStateManager.doPolygonOffset(-1.0F, -10.0F);
       GlStateManager.enablePolygonOffset();
       GlStateManager.alphaFunc(516, 0.1F);
       GlStateManager.enableAlpha();
@@ -1596,6 +1604,11 @@
     * @param execute If equals to 0 the method is executed
     */
    public void drawSelectionBox(EntityPlayer player, MovingObjectPosition movingObjectPositionIn, int execute, float partialTicks) {
+      if (Hyperium.INSTANCE.getHandlers().getConfigOptions().isCancelBox) {
+         Hyperium.INSTANCE.getHandlers().getConfigOptions().isCancelBox = false;
+         return;
+      }
+
       if(execute == 0 && movingObjectPositionIn.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK) {
          GlStateManager.enableBlend();
          GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
@@ -1741,6 +1754,7 @@
    }
 
    public void spawnParticle(int particleID, boolean ignoreRange, final double xCoord, final double yCoord, final double zCoord, double xOffset, double yOffset, double zOffset, int... parameters) {
+      if(this.mc.gameSettings.particleSetting == 3) return;
       try {
          this.spawnEntityFX(particleID, ignoreRange, xCoord, yCoord, zCoord, xOffset, yOffset, zOffset, parameters);
       } catch (Throwable throwable) {
@@ -1761,12 +1775,15 @@
    }
 
    private void spawnParticle(EnumParticleTypes particleIn, double xCoord, double yCoord, double zCoord, double xOffset, double yOffset, double zOffset, int... parameters) {
+      if(Minecraft.getMinecraft().gameSettings.particleSetting == 3) return;
+
       this.spawnParticle(particleIn.getParticleID(), particleIn.getShouldIgnoreRange(), xCoord, yCoord, zCoord, xOffset, yOffset, zOffset, parameters);
    }
 
    private EntityFX spawnEntityFX(int particleID, boolean ignoreRange, double xCoord, double yCoord, double zCoord, double xOffset, double yOffset, double zOffset, int... parameters) {
       if(this.mc != null && this.mc.getRenderViewEntity() != null && this.mc.effectRenderer != null) {
          int i = this.mc.gameSettings.particleSetting;
+         if(i == 3) return null;
          if(i == 1 && this.theWorld.rand.nextInt(3) == 0) {
             i = 2;
          }
@@ -1797,6 +1814,16 @@
     * textures. On server worlds, removes the entity from the entity tracker.
     */
    public void onEntityRemoved(Entity entityIn) {
+      if (entityIn instanceof AbstractClientPlayer) {
+         MemoryHelper.INSTANCE.queueDelete(((AbstractClientPlayer) entityIn).getLocationCape());
+         MemoryHelper.INSTANCE.queueDelete(((AbstractClientPlayer) entityIn).getLocationSkin());
+         NetworkPlayerInfo info = ((AbstractClientPlayer) entityIn).getPlayerInfo();
+         if (info == null) return;
+
+         info.playerTexturesLoaded = false;
+         info.locationCape = null;
+         info.locationSkin = null;
+      }
    }
 
    /**
@@ -1906,7 +1933,6 @@
          double d15 = (double)blockPosIn.getX() + (double)l * 0.6D + 0.5D;
          double d17 = (double)blockPosIn.getY() + 0.5D;
          double d19 = (double)blockPosIn.getZ() + (double)i * 0.6D + 0.5D;
-
          for(int k1 = 0; k1 < 10; ++k1) {
             double d20 = random.nextDouble() * 0.2D + 0.01D;
             double d21 = d15 + (double)l * 0.01D + (random.nextDouble() - 0.5D) * (double)i * 0.5D;
@@ -1928,6 +1954,7 @@
          this.mc.effectRenderer.addBlockDestroyEffects(blockPosIn, block.getStateFromMeta(data >> 12 & 255));
          break;
       case 2002:
+
          double d13 = (double)blockPosIn.getX();
          double d14 = (double)blockPosIn.getY();
          double d16 = (double)blockPosIn.getZ();
