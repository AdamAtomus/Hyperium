--- original/net/minecraft/client/renderer/RenderGlobal.java
+++ changed/net/minecraft/client/renderer/RenderGlobal.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.renderer;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.render.RenderEntitiesEvent;
+import cc.hyperium.internal.MemoryHelper;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -24,7 +28,9 @@
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.audio.ISound;
 import net.minecraft.client.audio.PositionedSoundRecord;
+import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.multiplayer.WorldClient;
+import net.minecraft.client.network.NetworkPlayerInfo;
 import net.minecraft.client.particle.EntityFX;
 import net.minecraft.client.renderer.chunk.ChunkRenderDispatcher;
 import net.minecraft.client.renderer.chunk.CompiledChunk;
@@ -519,6 +525,7 @@
                 this.entityOutlineFramebuffer.framebufferClear();
                 this.entityOutlineFramebuffer.bindFramebuffer(false);
                 this.theWorld.theProfiler.endStartSection("entityOutlines");
+                EventBus.INSTANCE.post(new RenderEntitiesEvent(partialTicks));
                 RenderHelper.disableStandardItemLighting();
                 this.renderManager.setRenderOutlines(true);
 
@@ -1227,6 +1234,7 @@
     }
 
     public void renderClouds(float partialTicks, int pass) {
+        if (Hyperium.INSTANCE.getHandlers().getCloudHandler().renderClouds(cloudTickCounter, partialTicks)) return;
         if (this.mc.theWorld.provider.isSurfaceWorld()) {
             if (this.mc.gameSettings.shouldRenderClouds() == 2) {
                 this.renderCloudsFancy(partialTicks, pass);
@@ -1562,7 +1570,7 @@
         GlStateManager.tryBlendFuncSeparate(774, 768, 1, 0);
         GlStateManager.enableBlend();
         GlStateManager.color(1.0F, 1.0F, 1.0F, 0.5F);
-        GlStateManager.doPolygonOffset(-3.0F, -3.0F);
+        GlStateManager.doPolygonOffset(-1.0F, -10.0F);
         GlStateManager.enablePolygonOffset();
         GlStateManager.alphaFunc(516, 0.1F);
         GlStateManager.enableAlpha();
@@ -1627,6 +1635,11 @@
      * @param execute If equals to 0 the method is executed
      */
     public void drawSelectionBox(EntityPlayer player, MovingObjectPosition movingObjectPositionIn, int execute, float partialTicks) {
+        if (Hyperium.INSTANCE.getHandlers().getConfigOptions().isCancelBox) {
+            Hyperium.INSTANCE.getHandlers().getConfigOptions().isCancelBox = false;
+            return;
+        }
+
         if (execute == 0 && movingObjectPositionIn.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK) {
             GlStateManager.enableBlend();
             GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
@@ -1773,6 +1786,7 @@
     }
 
     public void spawnParticle(int particleID, boolean ignoreRange, final double xCoord, final double yCoord, final double zCoord, double xOffset, double yOffset, double zOffset, int... parameters) {
+        if (this.mc.gameSettings.particleSetting == 3) return;
         try {
             this.spawnEntityFX(particleID, ignoreRange, xCoord, yCoord, zCoord, xOffset, yOffset, zOffset, parameters);
         } catch (Throwable throwable) {
@@ -1794,6 +1808,8 @@
     }
 
     private void spawnParticle(EnumParticleTypes particleIn, double xCoord, double yCoord, double zCoord, double xOffset, double yOffset, double zOffset, int... parameters) {
+        if (mc.gameSettings.particleSetting == 3) return;
+
         this.spawnParticle(particleIn.getParticleID(), particleIn.getShouldIgnoreRange(), xCoord, yCoord, zCoord, xOffset, yOffset, zOffset, parameters);
     }
 
@@ -1801,6 +1817,7 @@
         if (this.mc != null && this.mc.getRenderViewEntity() != null && this.mc.effectRenderer != null) {
             int i = this.mc.gameSettings.particleSetting;
 
+            if (i == 3) return null;
             if (i == 1 && this.theWorld.rand.nextInt(3) == 0) {
                 i = 2;
             }
@@ -1832,6 +1849,17 @@
      * textures. On server worlds, removes the entity from the entity tracker.
      */
     public void onEntityRemoved(Entity entityIn) {
+        if (entityIn instanceof AbstractClientPlayer) {
+            MemoryHelper.INSTANCE.queueDelete(((AbstractClientPlayer) entityIn).getLocationCape());
+            MemoryHelper.INSTANCE.queueDelete(((AbstractClientPlayer) entityIn).getLocationSkin());
+            NetworkPlayerInfo info = ((AbstractClientPlayer) entityIn).getPlayerInfo();
+
+            if (info == null) return;
+
+            info.playerTexturesLoaded = false;
+            info.locationCape = null;
+            info.locationSkin = null;
+        }
     }
 
     /**
