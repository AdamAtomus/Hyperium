--- original/net/minecraft/world/World.java
+++ changed/net/minecraft/world/World.java
@@ -1,5 +1,9 @@
 package net.minecraft.world;
 
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.world.EntityJoinWorldEvent;
+import cc.hyperium.event.world.SpawnpointChangeEvent;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -19,6 +23,7 @@
 import net.minecraft.block.BlockStairs;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.client.Minecraft;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.Entity;
@@ -497,6 +502,8 @@
    }
 
    public int getLight(BlockPos pos) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
       if(pos.getY() < 0) {
          return 0;
       } else {
@@ -509,10 +516,13 @@
    }
 
    public int getLightFromNeighbors(BlockPos pos) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
       return this.getLight(pos, true);
    }
 
    public int getLight(BlockPos pos, boolean checkNeighbors) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
       if(pos.getX() >= -30000000 && pos.getZ() >= -30000000 && pos.getX() < 30000000 && pos.getZ() < 30000000) {
          if(checkNeighbors && this.getBlockState(pos).getBlock().getUseNeighborBrightness()) {
             int i1 = this.getLight(pos.up(), false);
@@ -603,6 +613,8 @@
 
    @SideOnly(Side.CLIENT)
    public int getLightFromNeighborsFor(EnumSkyBlock type, BlockPos pos) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
       if(this.provider.getHasNoSky() && type == EnumSkyBlock.SKY) {
          return 0;
       } else {
@@ -927,6 +939,7 @@
             this.updateAllPlayersSleepingFlag();
          }
 
+         EventBus.INSTANCE.post(new EntityJoinWorldEvent(this, entityIn));
          this.getChunkFromChunkCoords(i, j).addEntity(entityIn);
          this.loadedEntityList.add(entityIn);
          this.onEntityAdded(entityIn);
@@ -2202,6 +2215,8 @@
     * gets the light level at the supplied position
     */
    private int getRawLight(BlockPos pos, EnumSkyBlock lightType) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
       if(lightType == EnumSkyBlock.SKY && this.canSeeSky(pos)) {
          return 15;
       } else {
@@ -2239,6 +2254,8 @@
    }
 
    public boolean checkLightFor(EnumSkyBlock lightType, BlockPos pos) {
+      if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return false;
+
       if(!this.isAreaLoaded(pos, 17, false)) {
          return false;
       } else {
@@ -2480,12 +2497,14 @@
    }
 
    public void loadEntities(Collection<Entity> entityCollection) {
-      this.loadedEntityList.addAll(entityCollection);
-
-      for(Entity entity : entityCollection) {
-         this.onEntityAdded(entity);
+      for (Entity entity : entityCollection) {
+         EntityJoinWorldEvent event = new EntityJoinWorldEvent((World) (Object) this, entity);
+         EventBus.INSTANCE.post(event);
+         if (!event.isCancelled()) {
+            loadedEntityList.add(entity);
+            onEntityAdded(entity);
+         }
       }
-
    }
 
    public void unloadEntities(Collection<Entity> entityCollection) {
@@ -2710,6 +2729,7 @@
    }
 
    public void setSpawnPoint(BlockPos pos) {
+      EventBus.INSTANCE.post(new SpawnpointChangeEvent(pos));
       this.worldInfo.setSpawn(pos);
    }
 
@@ -2730,6 +2750,7 @@
 
       if(!this.loadedEntityList.contains(entityIn)) {
          this.loadedEntityList.add(entityIn);
+         EventBus.INSTANCE.post(new EntityJoinWorldEvent(this, entityIn));
       }
 
    }
@@ -2968,7 +2989,7 @@
     */
    @SideOnly(Side.CLIENT)
    public double getHorizon() {
-      return this.worldInfo.getTerrainType() == WorldType.FLAT?0.0D:63.0D;
+      return Settings.VOID_FLICKER_FIX ? 0.0 : worldInfo.getTerrainType() == WorldType.FLAT ? 0.0D : 63.0D;
    }
 
    public void sendBlockBreakProgress(int breakerId, BlockPos pos, int progress) {
@@ -3071,4 +3092,8 @@
       int k = 128;
       return i >= -k && i <= k && j >= -k && j <= k;
    }
+
+   public float getRainingStrength() {
+      return rainingStrength;
+   }
 }
