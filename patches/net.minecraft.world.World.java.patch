--- original/net/minecraft/world/World.java
+++ changed/net/minecraft/world/World.java
@@ -1,5 +1,10 @@
 package net.minecraft.world;
 
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.world.EntityJoinWorldEvent;
+import cc.hyperium.event.world.EntityLeaveWorldEvent;
+import cc.hyperium.event.world.SpawnpointChangeEvent;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -19,6 +24,7 @@
 import net.minecraft.block.BlockStairs;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.client.Minecraft;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.Entity;
@@ -485,6 +491,8 @@
     }
 
     public int getLight(BlockPos pos) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
         if (pos.getY() < 0) {
             return 0;
         } else {
@@ -497,10 +505,13 @@
     }
 
     public int getLightFromNeighbors(BlockPos pos) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
         return this.getLight(pos, true);
     }
 
     public int getLight(BlockPos pos, boolean checkNeighbors) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
         if (pos.getX() >= -30000000 && pos.getZ() >= -30000000 && pos.getX() < 30000000 && pos.getZ() < 30000000) {
             if (checkNeighbors && this.getBlockState(pos).getBlock().getUseNeighborBrightness()) {
                 int i1 = this.getLight(pos.up(), false);
@@ -593,6 +604,8 @@
 
     @SideOnly(Side.CLIENT)
     public int getLightFromNeighborsFor(EnumSkyBlock type, BlockPos pos) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
         if (this.provider.getHasNoSky() && type == EnumSkyBlock.SKY) {
             return 0;
         } else {
@@ -921,6 +934,7 @@
                 this.updateAllPlayersSleepingFlag();
             }
 
+            EventBus.INSTANCE.post(new EntityJoinWorldEvent(this, entityIn));
             this.getChunkFromChunkCoords(i, j).addEntity(entityIn);
             this.loadedEntityList.add(entityIn);
             this.onEntityAdded(entityIn);
@@ -952,6 +966,7 @@
             entityIn.mountEntity((Entity)null);
         }
 
+        EventBus.INSTANCE.post(new EntityLeaveWorldEvent(this, entityIn));
         entityIn.setDead();
 
         if (entityIn instanceof EntityPlayer) {
@@ -2261,6 +2276,8 @@
      * gets the light level at the supplied position
      */
     private int getRawLight(BlockPos pos, EnumSkyBlock lightType) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return 15;
+
         if (lightType == EnumSkyBlock.SKY && this.canSeeSky(pos)) {
             return 15;
         } else {
@@ -2300,6 +2317,8 @@
     }
 
     public boolean checkLightFor(EnumSkyBlock lightType, BlockPos pos) {
+        if (Settings.FULLBRIGHT && !Minecraft.getMinecraft().isIntegratedServerRunning()) return false;
+
         if (!this.isAreaLoaded(pos, 17, false)) {
             return false;
         } else {
@@ -2550,10 +2569,14 @@
     }
 
     public void loadEntities(Collection<Entity> entityCollection) {
-        this.loadedEntityList.addAll(entityCollection);
-
         for (Entity entity : entityCollection) {
-            this.onEntityAdded(entity);
+            EntityJoinWorldEvent event = new EntityJoinWorldEvent((World) (Object) this, entity);
+            EventBus.INSTANCE.post(event);
+
+            if (!event.isCancelled()) {
+                loadedEntityList.add(entity);
+                onEntityAdded(entity);
+            }
         }
     }
 
@@ -2791,6 +2814,7 @@
     }
 
     public void setSpawnPoint(BlockPos pos) {
+        EventBus.INSTANCE.post(new SpawnpointChangeEvent(pos));
         this.worldInfo.setSpawn(pos);
     }
 
@@ -2811,6 +2835,7 @@
 
         if (!this.loadedEntityList.contains(entityIn)) {
             this.loadedEntityList.add(entityIn);
+            EventBus.INSTANCE.post(new EntityJoinWorldEvent(this, entityIn));
         }
     }
 
@@ -3045,7 +3070,7 @@
      */
     @SideOnly(Side.CLIENT)
     public double getHorizon() {
-        return this.worldInfo.getTerrainType() == WorldType.FLAT ? 0.0D : 63.0D;
+        return Settings.VOID_FLICKER_FIX ? 0.0 : worldInfo.getTerrainType() == WorldType.FLAT ? 0.0D : 63.0D;
     }
 
     public void sendBlockBreakProgress(int breakerId, BlockPos pos, int progress) {
@@ -3150,4 +3175,8 @@
         int k = 128;
         return i >= -k && i <= k && j >= -k && j <= k;
     }
+
+    public float getRainingStrength() {
+        return rainingStrength;
+    }
 }
