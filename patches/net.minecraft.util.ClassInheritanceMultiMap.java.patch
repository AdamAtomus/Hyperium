--- original/net/minecraft/util/ClassInheritanceMultiMap.java
+++ changed/net/minecraft/util/ClassInheritanceMultiMap.java
@@ -1,9 +1,8 @@
 package net.minecraft.util;
 
-import com.google.common.collect.Iterators;
-import com.google.common.collect.Lists;
-import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
+import com.chattriggers.ctjs.utils.Utils;
+import com.google.common.collect.*;
+
 import java.util.AbstractSet;
 import java.util.Iterator;
 import java.util.List;
@@ -93,21 +92,20 @@
    }
 
    public <S> Iterable<S> getByClass(final Class<S> clazz) {
-      return new Iterable<S>() {
-         public Iterator<S> iterator() {
-            List<T> list = (List)ClassInheritanceMultiMap.this.map.get(ClassInheritanceMultiMap.this.initializeClassLookup(clazz));
-            if(list == null) {
-               return Iterators.<S>emptyIterator();
-            } else {
-               Iterator<T> iterator = list.iterator();
-               return Iterators.filter(iterator, clazz);
-            }
+      return () -> {
+         List<T> list = map.get(initializeClassLookup(clazz));
+
+         if (list == null) {
+            return (UnmodifiableListIterator<S>) Utils.EMPTY_ITERATOR;
+         } else {
+            Iterator<T> iterator = list.iterator();
+            return Iterators.filter(iterator, clazz);
          }
       };
    }
 
    public Iterator<T> iterator() {
-      return this.values.isEmpty()?Iterators.<T>emptyIterator():Iterators.unmodifiableIterator(this.values.iterator());
+      return values.isEmpty() ? (UnmodifiableListIterator<T>) Utils.EMPTY_ITERATOR : Iterators.unmodifiableIterator(values.iterator());
    }
 
    public int size() {
