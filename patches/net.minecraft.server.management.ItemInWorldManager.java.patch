--- original/net/minecraft/server/management/ItemInWorldManager.java
+++ changed/net/minecraft/server/management/ItemInWorldManager.java
@@ -1,9 +1,12 @@
 package net.minecraft.server.management;
 
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.interact.PlayerInteractEvent;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockChest;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.inventory.IInventory;
@@ -15,6 +18,8 @@
 import net.minecraft.tileentity.TileEntityChest;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.EnumFacing;
+import net.minecraft.util.MovingObjectPosition;
+import net.minecraft.util.Vec3;
 import net.minecraft.world.ILockableContainer;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
@@ -105,7 +110,7 @@
             this.isDestroyingBlock = false;
          } else {
             int k = this.curblockDamage - this.initialDamage;
-            float f1 = block1.getPlayerRelativeBlockHardness(this.thisPlayerMP, this.thisPlayerMP.worldObj, this.field_180241_i) * (float)(k + 1);
+            float f1 = block1.getPlayerRelativeBlockHardness(this.thisPlayerMP, this.thisPlayerMP.worldObj, this.field_180240_f) * (float)(k + 1);
             int l = (int)(f1 * 10.0F);
             if(l != this.durabilityRemainingOnBlock) {
                this.theWorld.sendBlockBreakProgress(this.thisPlayerMP.getEntityId(), this.field_180240_f, l);
@@ -116,11 +121,31 @@
 
    }
 
+   // Hyperium
+   private Vec3 rayTraceEyeHitVec(EntityLivingBase entity, double length) {
+      MovingObjectPosition movingObjectPosition = rayTraceEyes(entity, length);
+      return movingObjectPosition == null ? null : movingObjectPosition.hitVec;
+   }
+
+   private MovingObjectPosition rayTraceEyes(EntityLivingBase entity, double length) {
+      Vec3 startPos = new Vec3(entity.posX, entity.posY + entity.getEyeHeight(), entity.posZ);
+      Vec3 endPos = startPos.add(new Vec3(entity.getLookVec().xCoord * length, entity.getLookVec().yCoord * length, entity.getLookVec().zCoord * length));
+      return entity.worldObj.rayTraceBlocks(startPos, endPos);
+   }
+
    /**
     * If not creative, it calls sendBlockBreakProgress until the block is broken first. tryHarvestBlock can also be the
     * result of this call.
     */
    public void onBlockClicked(BlockPos pos, EnumFacing side) {
+      PlayerInteractEvent event = new PlayerInteractEvent(thisPlayerMP, PlayerInteractEvent.Action.LEFT_CLICK_BLOCK,
+              pos, theWorld, side, rayTraceEyeHitVec(thisPlayerMP, 6));
+      EventBus.INSTANCE.post(event);
+      if (event.isCancelled()) {
+         thisPlayerMP.playerNetServerHandler.sendPacket(new S23PacketBlockChange(theWorld, pos));
+         return;
+      }
+
       if(this.isCreative()) {
          if(!this.theWorld.extinguishFire((EntityPlayer)null, pos, side)) {
             this.tryHarvestBlock(pos);
@@ -316,6 +341,14 @@
 
          return false;
       } else {
+         PlayerInteractEvent event = new PlayerInteractEvent(player, PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK,
+                 pos, worldIn, side, new Vec3(offsetX, offsetY, offsetZ));
+         EventBus.INSTANCE.post(event);
+         if (event.isCancelled()) {
+            thisPlayerMP.playerNetServerHandler.sendPacket(new S23PacketBlockChange(theWorld, pos));
+            return false;
+         }
+
          if(!player.isSneaking() || player.getHeldItem() == null) {
             IBlockState iblockstate = worldIn.getBlockState(pos);
             if(iblockstate.getBlock().onBlockActivated(worldIn, pos, iblockstate, player, side, offsetX, offsetY, offsetZ)) {
