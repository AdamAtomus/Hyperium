--- original/net/minecraft/client/renderer/texture/TextureManager.java
+++ changed/net/minecraft/client/renderer/texture/TextureManager.java
@@ -3,6 +3,7 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import java.io.IOException;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -21,10 +22,11 @@
 @SideOnly(Side.CLIENT)
 public class TextureManager implements ITickable, IResourceManagerReloadListener {
     private static final Logger logger = LogManager.getLogger();
-    private final Map<ResourceLocation, ITextureObject> mapTextureObjects = Maps.<ResourceLocation, ITextureObject>newHashMap();
+    public final Map<ResourceLocation, ITextureObject> mapTextureObjects = Maps.<ResourceLocation, ITextureObject>newHashMap();
     private final List<ITickable> listTickables = Lists.<ITickable>newArrayList();
     private final Map<String, Integer> mapTextureCounters = Maps.<String, Integer>newHashMap();
     private IResourceManager theResourceManager;
+    private final HashMap<String, ITextureObject> textures = new HashMap<>();
 
     public TextureManager(IResourceManager resourceManager) {
         this.theResourceManager = resourceManager;
@@ -44,6 +46,7 @@
     public boolean loadTickableTexture(ResourceLocation textureLocation, ITickableTextureObject textureObj) {
         if (this.loadTexture(textureLocation, textureObj)) {
             this.listTickables.add(textureObj);
+            textures.put(textureLocation.toString(), textureObj);
             return true;
         } else {
             return false;
@@ -53,6 +56,8 @@
     public boolean loadTexture(ResourceLocation textureLocation, ITextureObject textureObj) {
         boolean flag = true;
 
+        ITextureObject textureCopy = textures.get(textureLocation.toString());
+        if (textureCopy != null) textureObj = textureCopy;
         try {
             ((ITextureObject)textureObj).loadTexture(this.theResourceManager);
         } catch (IOException ioexception) {
@@ -92,6 +97,7 @@
 
         this.mapTextureCounters.put(name, integer);
         ResourceLocation resourcelocation = new ResourceLocation(String.format("dynamic/%s_%d", new Object[] {name, integer}));
+        textures.put(resourcelocation.toString(), texture);
         this.loadTexture(resourcelocation, texture);
         return resourcelocation;
     }
@@ -115,4 +121,5 @@
             this.loadTexture((ResourceLocation)entry.getKey(), (ITextureObject)entry.getValue());
         }
     }
+
 }
