--- original/net/minecraft/util/ScreenShotHelper.java
+++ changed/net/minecraft/util/ScreenShotHelper.java
@@ -1,27 +1,30 @@
 package net.minecraft.util;
 
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.nio.IntBuffer;
-import java.text.DateFormat;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import javax.imageio.ImageIO;
+import cc.hyperium.Hyperium;
+import cc.hyperium.config.Settings;
+import cc.hyperium.handlers.handlers.keybinds.HyperiumBind;
+import cc.hyperium.utils.ChatColor;
+import cc.hyperium.utils.mods.AsyncScreenshotSaver;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.OpenGlHelper;
-import net.minecraft.client.renderer.texture.TextureUtil;
 import net.minecraft.client.shader.Framebuffer;
-import net.minecraft.event.ClickEvent;
-import net.minecraft.util.ChatComponentText;
-import net.minecraft.util.ChatComponentTranslation;
-import net.minecraft.util.IChatComponent;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.BufferUtils;
+import org.lwjgl.input.Keyboard;
+import org.lwjgl.input.Mouse;
 import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL12;
 
+import java.io.File;
+import java.nio.IntBuffer;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
 @SideOnly(Side.CLIENT)
 public class ScreenShotHelper {
    private static final Logger logger = LogManager.getLogger();
@@ -36,10 +39,6 @@
     * requestedWidthInPixels, requestedHeightInPixels, frameBuffer
     */
    public static IChatComponent saveScreenshot(File gameDirectory, int width, int height, Framebuffer buffer) {
-      /**
-       * Saves a screenshot in the game directory with the given file name (or null to generate a time-stamped name).
-       * Args: gameDirectory, fileName, requestedWidthInPixels, requestedHeightInPixels, frameBuffer
-       */
       return saveScreenshot(gameDirectory, (String)null, width, height, buffer);
    }
 
@@ -48,63 +47,50 @@
     * Args: gameDirectory, fileName, requestedWidthInPixels, requestedHeightInPixels, frameBuffer
     */
    public static IChatComponent saveScreenshot(File gameDirectory, String screenshotName, int width, int height, Framebuffer buffer) {
-      try {
-         File file1 = new File(gameDirectory, "screenshots");
-         file1.mkdir();
-         if(OpenGlHelper.isFramebufferEnabled()) {
-            width = buffer.framebufferTextureWidth;
-            height = buffer.framebufferTextureHeight;
-         }
+      final File file1 = new File(Minecraft.getMinecraft().mcDataDir, "screenshots");
+      file1.mkdir();
 
-         int i = width * height;
-         if(pixelBuffer == null || pixelBuffer.capacity() < i) {
-            pixelBuffer = BufferUtils.createIntBuffer(i);
-            pixelValues = new int[i];
-         }
+      if (OpenGlHelper.isFramebufferEnabled()) {
+         width = buffer.framebufferTextureWidth;
+         height = buffer.framebufferTextureHeight;
+      }
 
-         GL11.glPixelStorei(3333, 1);
-         GL11.glPixelStorei(3317, 1);
-         pixelBuffer.clear();
-         if(OpenGlHelper.isFramebufferEnabled()) {
-            GlStateManager.bindTexture(buffer.framebufferTexture);
-            GL11.glGetTexImage(3553, 0, '\u80e1', '\u8367', (IntBuffer)pixelBuffer);
-         } else {
-            GL11.glReadPixels(0, 0, width, height, '\u80e1', '\u8367', (IntBuffer)pixelBuffer);
-         }
+      final int i = width * height;
 
-         pixelBuffer.get(pixelValues);
-         TextureUtil.processPixelValues(pixelValues, width, height);
-         BufferedImage bufferedimage = null;
-         if(OpenGlHelper.isFramebufferEnabled()) {
-            bufferedimage = new BufferedImage(buffer.framebufferWidth, buffer.framebufferHeight, 1);
-            int j = buffer.framebufferTextureHeight - buffer.framebufferHeight;
+      if (pixelBuffer == null || pixelBuffer.capacity() < i) {
+         pixelBuffer = BufferUtils.createIntBuffer(i);
+         pixelValues = new int[i];
+      }
 
-            for(int k = j; k < buffer.framebufferTextureHeight; ++k) {
-               for(int l = 0; l < buffer.framebufferWidth; ++l) {
-                  bufferedimage.setRGB(l, k - j, pixelValues[k * buffer.framebufferTextureWidth + l]);
-               }
-            }
-         } else {
-            bufferedimage = new BufferedImage(width, height, 1);
-            bufferedimage.setRGB(0, 0, width, height, pixelValues, 0, width);
-         }
+      GL11.glPixelStorei(GL11.GL_PACK_ALIGNMENT, 1);
+      GL11.glPixelStorei(GL11.GL_UNPACK_ALIGNMENT, 1);
+      pixelBuffer.clear();
 
-         File file2;
-         if(screenshotName == null) {
-            file2 = getTimestampedPNGFileForDirectory(file1);
-         } else {
-            file2 = new File(file1, screenshotName);
-         }
+      if (OpenGlHelper.isFramebufferEnabled()) {
+         GlStateManager.bindTexture(buffer.framebufferTexture);
+         GL11.glGetTexImage(GL11.GL_TEXTURE_2D, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, pixelBuffer);
+      } else {
+         GL11.glReadPixels(0, 0, width, height, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, pixelBuffer);
+      }
 
-         ImageIO.write(bufferedimage, "png", (File)file2);
-         IChatComponent ichatcomponent = new ChatComponentText(file2.getName());
-         ichatcomponent.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_FILE, file2.getAbsolutePath()));
-         ichatcomponent.getChatStyle().setUnderlined(Boolean.valueOf(true));
-         return new ChatComponentTranslation("screenshot.success", new Object[]{ichatcomponent});
-      } catch (Exception exception) {
-         logger.warn((String)"Couldn\'t save screenshot", (Throwable)exception);
-         return new ChatComponentTranslation("screenshot.failure", new Object[]{exception.getMessage()});
+      boolean upload = true;
+      pixelBuffer.get(pixelValues);
+
+      if (!Settings.DEFAULT_UPLOAD_SS) {
+         HyperiumBind uploadBind = Hyperium.INSTANCE.getHandlers().getKeybindHandler().getBinding("Upload Screenshot");
+         int keyCode = uploadBind.getKeyCode();
+         upload = keyCode < 0 ? Mouse.isButtonDown(keyCode + 100) : Keyboard.isKeyDown(keyCode);
       }
+
+      new Thread(new AsyncScreenshotSaver(width, height, pixelValues, Minecraft.getMinecraft().getFramebuffer(),
+              new File(Minecraft.getMinecraft().mcDataDir, "screenshots"), upload)).start();
+      if (!upload) {
+         return Settings.HYPERIUM_CHAT_PREFIX ? new ChatComponentText(ChatColor.RED + "[Hyperium] " + ChatColor.WHITE + "Capturing...") :
+                 new ChatComponentText(ChatColor.WHITE + "Capturing...");
+      }
+
+      return Settings.HYPERIUM_CHAT_PREFIX ? new ChatComponentText(ChatColor.RED + "[Hyperium] " + ChatColor.WHITE + "Uploading...") :
+              new ChatComponentText(ChatColor.WHITE + "Uploading...");
    }
 
    /**
