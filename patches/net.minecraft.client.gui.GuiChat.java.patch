--- original/net/minecraft/client/gui/GuiChat.java
+++ changed/net/minecraft/client/gui/GuiChat.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.gui;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.config.Settings;
+import cc.hyperium.mods.nickhider.NickHider;
+import cc.hyperium.utils.ChatColor;
 import com.google.common.collect.Lists;
 import java.io.IOException;
 import java.util.List;
@@ -31,10 +35,12 @@
     private int autocompleteIndex;
     private List<String> foundPlayerNames = Lists.<String>newArrayList();
     /** Chat entry field */
-    protected GuiTextField inputField;
+    protected GuiTextField inputField = null;
     /** is the text that appears when you press the chat key and the input box appears pre-filled */
     private String defaultInputFieldText = "";
 
+    public static int maxStringLength = 100;
+
     public GuiChat() {
     }
 
@@ -49,11 +55,14 @@
     public void initGui() {
         Keyboard.enableRepeatEvents(true);
         this.sentHistoryCursor = this.mc.ingameGUI.getChatGUI().getSentMessages().size();
+        boolean wasInitBefore = this.inputField != null;
+        String oldMsg = Settings.CHAT_KEEPER && wasInitBefore ? this.inputField.getText() : "";
         this.inputField = new GuiTextField(0, this.fontRendererObj, 4, this.height - 12, this.width - 4, 12);
-        this.inputField.setMaxStringLength(100);
+        inputField.setMaxStringLength(maxStringLength);
+        if (!wasInitBefore) this.inputField.setText(this.defaultInputFieldText);
+        else this.inputField.setText(oldMsg);
         this.inputField.setEnableBackgroundDrawing(false);
         this.inputField.setFocused(true);
-        this.inputField.setText(this.defaultInputFieldText);
         this.inputField.setCanLoseFocus(false);
     }
 
@@ -198,7 +207,7 @@
             this.mc.ingameGUI.getChatGUI().printChatMessageWithOptionalDeletion(new ChatComponentText(stringbuilder.toString()), 1);
         }
 
-        this.inputField.writeText((String)this.foundPlayerNames.get(this.autocompleteIndex++));
+        this.inputField.writeText(ChatColor.stripColor(this.foundPlayerNames.get(this.autocompleteIndex++)));
     }
 
     private void sendAutocompleteRequest(String p_146405_1_, String p_146405_2_) {
@@ -209,6 +218,7 @@
                 blockpos = this.mc.objectMouseOver.getBlockPos();
             }
 
+            Hyperium.INSTANCE.getHandlers().getHyperiumCommandHandler().autoComplete(p_146405_1_);
             this.mc.thePlayer.sendQueue.addToSendQueue(new C14PacketTabComplete(p_146405_1_, blockpos));
             this.waitingOnAutocomplete = true;
         }
@@ -254,6 +264,9 @@
     }
 
     public void onAutocompleteResponse(String[] p_146406_1_) {
+        p_146406_1_ = NickHider.instance == null || !NickHider.instance.getNickHiderConfig().isMasterEnabled() ?
+                      p_146406_1_ : NickHider.instance.tabComplete(p_146406_1_, inputField.getText());
+
         if (this.waitingOnAutocomplete) {
             this.playerNamesFound = false;
             this.foundPlayerNames.clear();
@@ -267,9 +280,9 @@
             String s1 = this.inputField.getText().substring(this.inputField.func_146197_a(-1, this.inputField.getCursorPosition(), false));
             String s2 = StringUtils.getCommonPrefix(p_146406_1_);
 
-            if (s2.length() > 0 && !s1.equalsIgnoreCase(s2)) {
+            if (s2.length() > 0 && !s1.equalsIgnoreCase(ChatColor.stripColor(s2))) {
                 this.inputField.deleteFromCursor(this.inputField.func_146197_a(-1, this.inputField.getCursorPosition(), false) - this.inputField.getCursorPosition());
-                this.inputField.writeText(s2);
+                this.inputField.writeText(ChatColor.stripColor(s2));
             } else if (this.foundPlayerNames.size() > 0) {
                 this.playerNamesFound = true;
                 this.autocompletePlayerNames();
@@ -283,4 +296,8 @@
     public boolean doesGuiPauseGame() {
         return false;
     }
+
+    public GuiTextField getInputField() {
+        return inputField;
+    }
 }
