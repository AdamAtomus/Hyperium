--- original/net/minecraft/client/renderer/entity/Render.java
+++ changed/net/minecraft/client/renderer/entity/Render.java
@@ -1,7 +1,16 @@
 package net.minecraft.client.renderer.entity;
 
+import cc.hyperium.Hyperium;
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.render.RenderNameTagEvent;
+import cc.hyperium.utils.ChatColor;
+import cc.hyperium.utils.StaffUtils;
+import cc.hyperium.utils.StringUtil;
+import cc.hyperium.utils.Utils;
 import net.minecraft.block.Block;
 import net.minecraft.client.Minecraft;
+import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.gui.FontRenderer;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.Tessellator;
@@ -22,6 +31,8 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.lwjgl.opengl.GL11;
 
+import java.util.UUID;
+
 @SideOnly(Side.CLIENT)
 public abstract class Render<T extends Entity> {
     private static final ResourceLocation shadowTextures = new ResourceLocation("textures/misc/shadow.png");
@@ -53,7 +64,7 @@
 
     protected void renderName(T entity, double x, double y, double z) {
         if (this.canRenderName(entity)) {
-            this.renderLivingLabel(entity, entity.getDisplayName().getFormattedText(), x, y, z, 64);
+            this.renderLivingLabel(entity, entity.getDisplayName().getFormattedText(), x, y, z, Math.min(64 * 64, 64));
         }
     }
 
@@ -62,7 +73,7 @@
     }
 
     protected void renderOffsetLivingLabel(T entityIn, double x, double y, double z, String str, float p_177069_9_, double p_177069_10_) {
-        this.renderLivingLabel(entityIn, str, x, y, z, 64);
+        renderLivingLabel(entityIn, str, x, y, z, Math.min(64 * 64, 64));
     }
 
     /**
@@ -300,13 +311,23 @@
 
         if (d0 <= (double)(maxDistance * maxDistance)) {
             FontRenderer fontrenderer = this.getFontRendererFromRenderManager();
+            boolean self = entityIn.equals(Minecraft.getMinecraft().thePlayer);
+            boolean show = !self || Settings.SHOW_OWN_NAME || RenderNameTagEvent.CANCEL;
             float f = 1.6F;
             float f1 = 0.016666668F * f;
             GlStateManager.pushMatrix();
-            GlStateManager.translate((float)x + 0.0F, (float)y + entityIn.height + 0.5F, (float)z);
+            float offset = Utils.INSTANCE.calculateDeadmauEarsOffset(entityIn);
+            GlStateManager.translate((float) x + 0.0F, (float) y + offset + entityIn.height + 0.5F, (float) z);
             GL11.glNormal3f(0.0F, 1.0F, 0.0F);
             GlStateManager.rotate(-this.renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-            GlStateManager.rotate(this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
+
+            int xMultiplier = 1; // Nametag x rotations should flip in front-facing 3rd person
+
+            if (Minecraft.getMinecraft() != null && Minecraft.getMinecraft().gameSettings != null && Minecraft.getMinecraft().gameSettings.thirdPersonView == 2) {
+                xMultiplier = -1;
+            }
+
+            GlStateManager.rotate(renderManager.playerViewX * xMultiplier, 1.0F, 0.0F, 0.0F);
             GlStateManager.scale(-f1, -f1, f1);
             GlStateManager.disableLighting();
             GlStateManager.depthMask(false);
@@ -315,25 +336,56 @@
             GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
             Tessellator tessellator = Tessellator.getInstance();
             WorldRenderer worldrenderer = tessellator.getWorldRenderer();
-            int i = 0;
 
-            if (str.equals("deadmau5")) {
-                i = -10;
+            if (show) {
+                int j = fontrenderer.getStringWidth(str) / 2;
+                GlStateManager.disableTexture2D();
+                worldrenderer.begin(GL11.GL_QUADS, DefaultVertexFormats.POSITION_COLOR);
+                float a = .25F;
+                worldrenderer.pos(-j - 1, -1, 0.0D).color(0.0F, 0.0F, 0.0F, a).endVertex();
+                worldrenderer.pos(-j - 1, 8, 0.0D).color(0.0F, 0.0F, 0.0F, a).endVertex();
+                worldrenderer.pos(j + 1, 8, 0.0D).color(0.0F, 0.0F, 0.0F, a).endVertex();
+                worldrenderer.pos(j + 1, -1, 0.0D).color(0.0F, 0.0F, 0.0F, a).endVertex();
+                tessellator.draw();
             }
-
-            int j = fontrenderer.getStringWidth(str) / 2;
-            GlStateManager.disableTexture2D();
-            worldrenderer.begin(7, DefaultVertexFormats.POSITION_COLOR);
-            worldrenderer.pos((double)(-j - 1), (double)(-1 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
-            worldrenderer.pos((double)(-j - 1), (double)(8 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
-            worldrenderer.pos((double)(j + 1), (double)(8 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
-            worldrenderer.pos((double)(j + 1), (double)(-1 + i), 0.0D).color(0.0F, 0.0F, 0.0F, 0.25F).endVertex();
-            tessellator.draw();
             GlStateManager.enableTexture2D();
-            fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, i, 553648127);
+
+            if (show) {
+                fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, 0, 553648127);
+            }
+
             GlStateManager.enableDepth();
             GlStateManager.depthMask(true);
-            fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, i, -1);
+
+            if (show) {
+                fontrenderer.drawString(str, -fontrenderer.getStringWidth(str) / 2, 0, -1);
+            }
+
+            if (show && Settings.SHOW_ONLINE_PLAYERS && Settings.SHOW_DOTS_ON_NAME_TAGS && entityIn instanceof EntityPlayer) {
+                String s = "âš«";
+                UUID gameProfileId = ((EntityPlayer) entityIn).getGameProfile().getId();
+                boolean online = Hyperium.INSTANCE.getHandlers().getStatusHandler().isOnline(gameProfileId);
+
+                if (StaffUtils.isStaff(gameProfileId) || StaffUtils.isBooster(gameProfileId)) {
+                    StaffUtils.DotColour colour = StaffUtils.getColor(gameProfileId);
+
+                    if (colour.isChroma) {
+                        StringUtil.INSTANCE.drawChromaWaveString(s, (fontrenderer.getStringWidth(str) + fontrenderer.getStringWidth(s)) / 2, -2);
+                    } else {
+                        String format = StaffUtils.getColor(gameProfileId).baseColour + s;
+                        fontrenderer.drawString(format, (fontrenderer.getStringWidth(str) + fontrenderer.getStringWidth(s)) / 2, -2, -1);
+                    }
+                } else {
+                    String format = online ? ChatColor.GREEN + s : ChatColor.RED + s;
+                    fontrenderer.drawString(format, (fontrenderer.getStringWidth(str) + fontrenderer.getStringWidth(s)) / 2, -2, -1);
+                }
+            }
+
+            if (entityIn instanceof EntityPlayer && !RenderNameTagEvent.CANCEL) {
+                EventBus.INSTANCE.post(new RenderNameTagEvent(((AbstractClientPlayer) entityIn), renderManager));
+                GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
+            }
+
             GlStateManager.enableLighting();
             GlStateManager.disableBlend();
             GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
