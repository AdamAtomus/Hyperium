--- original/net/minecraft/client/gui/GuiNewChat.java
+++ changed/net/minecraft/client/gui/GuiNewChat.java
@@ -1,5 +1,8 @@
 package net.minecraft.client.gui;
 
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.network.chat.ChatEvent;
 import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
@@ -14,6 +17,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import static cc.hyperium.gui.HyperiumGui.clamp;
+import static cc.hyperium.gui.HyperiumGui.easeOut;
+
 @SideOnly(Side.CLIENT)
 public class GuiNewChat extends Gui {
     private static final Logger logger = LogManager.getLogger();
@@ -24,11 +30,39 @@
     private int scrollPos;
     private boolean isScrolled;
 
+    // Hyperium start
+    public float percentComplete;
+    public int lowerThreshold;
+    public int topThreshold;
+    public int ticksLeft = 200;
+    public int newLines;
+    public long prevMillis = -1;
+    // Hyperium end
+
     public GuiNewChat(Minecraft mcIn) {
         this.mc = mcIn;
+
+        // Hyperium
+        int fifth = ticksLeft / 10;
+        lowerThreshold = fifth;
+        topThreshold = ticksLeft - fifth;
     }
 
     public void drawChat(int updateCounter) {
+        // Hyperium start
+        if (Settings.SMOOTH_CHAT) {
+            if (prevMillis == -1) {
+                prevMillis = System.currentTimeMillis();
+                return;
+            }
+
+            long current = System.currentTimeMillis();
+            long diff = current - prevMillis;
+            prevMillis = current;
+            updatePercentage(diff);
+        }
+        // Hyperium end
+
         if (this.mc.gameSettings.chatVisibility != EntityPlayer.EnumChatVisibility.HIDDEN) {
             int i = this.getLineCount();
             boolean flag = false;
@@ -71,10 +105,36 @@
                             if (l1 > 3) {
                                 int i2 = 0;
                                 int j2 = -i1 * 9;
-                                drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                                // Hyperium start
+                                if (!Settings.FASTCHAT) {
+                                    if (Settings.SMOOTH_CHAT) {
+                                        if (ticksLeft > lowerThreshold && i1 < newLines) {
+                                            drawRect(i2, (int) (-i1 * 9 - percentComplete * (-i1 * 9 - (j2 - 9))),
+                                                    i2 + l + 4, (int) (percentComplete * (-i1 * 9 - (j2 - 9))), (int) ((l1 / 2) * percentComplete) << 24);
+                                        } else {
+                                            drawRect(i2, ticksLeft > lowerThreshold ? (int) ((j2 - 9) + 9 - percentComplete * 9) :
+                                                    j2 - 9, i2 + l + 4, ticksLeft > lowerThreshold ? (int) ((j2) + 9 - percentComplete * 9) : j2, l1 / 2 << 24);
+                                        }
+                                    } else {
+                                        drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                                    }
+                                }
+                                // Hyperium end
                                 String s = chatline.getChatComponent().getFormattedText();
                                 GlStateManager.enableBlend();
-                                this.mc.fontRendererObj.drawStringWithShadow(s, (float)i2, (float)(j2 - 8), 16777215 + (l1 << 24));
+                                // Hyperium start
+                                if (Settings.SMOOTH_CHAT) {
+                                    if (ticksLeft > lowerThreshold && i1 <= newLines) {
+                                        mc.fontRendererObj.drawStringWithShadow(s, 0, -i1 * 9 - percentComplete * (-i1 * 9 - (j2 - 8)),
+                                                16777215 + ((int) (255 * percentComplete) << 24));
+                                    } else {
+                                        mc.fontRendererObj.drawStringWithShadow(s, (float) i2, ticksLeft > lowerThreshold ? (j2 - 8) + 9 - percentComplete * 9 :
+                                                j2 - 8, 16777215 + (l1 << 24));
+                                    }
+                                } else {
+                                    mc.fontRendererObj.drawStringWithShadow(s, (float) i2, (float) (j2 - 8), 16777215 + (l1 << 24));
+                                }
+                                // Hyperium end
                                 GlStateManager.disableAlpha();
                                 GlStateManager.disableBlend();
                             }
@@ -113,6 +173,19 @@
     }
 
     public void printChatMessage(IChatComponent chatComponent) {
+        // Hyperium start
+        ChatEvent event = new ChatEvent(chatComponent);
+        EventBus.INSTANCE.post(event);
+        if (event.isCancelled()) {
+            return;
+        } else {
+            if (event.getChat() != chatComponent) {
+                printChatMessageWithOptionalDeletion(event.getChat(), 0);
+                return;
+            }
+        }
+        // Hyperium end
+
         this.printChatMessageWithOptionalDeletion(chatComponent, 0);
     }
 
@@ -120,6 +193,11 @@
      * prints the ChatComponent to Chat. If the ID is not 0, deletes an existing Chat Line of that ID from the GUI
      */
     public void printChatMessageWithOptionalDeletion(IChatComponent chatComponent, int chatLineId) {
+        // Hyperium start
+        ticksLeft = 200;
+        percentComplete = 0.0f;
+        // Hyperium end
+
         this.setChatLine(chatComponent, chatLineId, this.mc.ingameGUI.getUpdateCounter(), false);
         logger.info("[CHAT] " + chatComponent.getUnformattedText());
     }
@@ -132,6 +210,7 @@
         int i = MathHelper.floor_float((float)this.getChatWidth() / this.getChatScale());
         List<IChatComponent> list = GuiUtilRenderComponents.splitText(chatComponent, i, this.mc.fontRendererObj, false, false);
         boolean flag = this.getChatOpen();
+        newLines = list.size() - 1; // Hyperium
 
         for (IChatComponent ichatcomponent : list) {
             if (flag && this.scrollPos > 0) {
@@ -142,14 +221,16 @@
             this.drawnChatLines.add(0, new ChatLine(updateCounter, ichatcomponent, chatLineId));
         }
 
-        while (this.drawnChatLines.size() > 100) {
+        // Hyperium
+        while (this.drawnChatLines.size() > 500) {
             this.drawnChatLines.remove(this.drawnChatLines.size() - 1);
         }
 
         if (!displayOnly) {
             this.chatLines.add(0, new ChatLine(updateCounter, chatComponent, chatLineId));
 
-            while (this.chatLines.size() > 100) {
+            // Hyperium
+            while (this.chatLines.size() > 500) {
                 this.chatLines.remove(this.chatLines.size() - 1);
             }
         }
@@ -314,4 +395,28 @@
     public int getLineCount() {
         return this.getChatHeight() / 9;
     }
+
+    // Hyperium start
+    public void updatePercentage(long diff) {
+        percentComplete = clamp(
+                easeOut(
+                        percentComplete,
+                        ticksLeft < lowerThreshold ? 0.0f :
+                                ticksLeft > topThreshold ? 1.0f : ticksLeft,
+                        0.01f,
+                        (float) 42 / diff
+                ),
+                0.0f,
+                1.0f
+        );
+    }
+
+    public List<ChatLine> getDrawnChatLines() {
+        return drawnChatLines;
+    }
+
+    public List<ChatLine> getChatLines() {
+        return chatLines;
+    }
+    // Hyperium end
 }
