--- original/net/minecraft/client/gui/GuiNewChat.java
+++ changed/net/minecraft/client/gui/GuiNewChat.java
@@ -1,5 +1,8 @@
 package net.minecraft.client.gui;
 
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.network.chat.ChatEvent;
 import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
@@ -19,6 +22,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import static cc.hyperium.gui.HyperiumGui.clamp;
+import static cc.hyperium.gui.HyperiumGui.easeOut;
+
 @SideOnly(Side.CLIENT)
 public class GuiNewChat extends Gui {
    private static final Logger logger = LogManager.getLogger();
@@ -28,12 +34,44 @@
    private final List<ChatLine> drawnChatLines = Lists.<ChatLine>newArrayList();
    private int scrollPos;
    private boolean isScrolled;
+   public static float percentComplete = 0.0F;
+   public static int lowerThreshold;
+   public static int topThreshold;
+   public static int ticksLeft = 200;
+   public static int newLines;
+   public static long prevMillis = -1;
 
    public GuiNewChat(Minecraft mcIn) {
       this.mc = mcIn;
+      int fifth = ticksLeft / 10;
+      lowerThreshold = fifth;
+      topThreshold = ticksLeft - fifth;
    }
+   public static void updatePercentage(long diff) {
+      percentComplete = clamp(
+              easeOut(
+                      percentComplete,
+                      ticksLeft < lowerThreshold ? 0.0f :
+                              ticksLeft > topThreshold ? 1.0f : ticksLeft,
+                      0.01f,
+                      (float) 42 / diff
+              ),
+              0.0f,
+              1.0f
+      );
+   }
 
    public void drawChat(int updateCounter) {
+      if (Settings.SMOOTH_CHAT) {
+         if (prevMillis == -1) {
+            prevMillis = System.currentTimeMillis();
+            return;
+         }
+         long current = System.currentTimeMillis();
+         long diff = current - prevMillis;
+         prevMillis = current;
+         updatePercentage(diff);
+      }
       if(this.mc.gameSettings.chatVisibility != EntityPlayer.EnumChatVisibility.HIDDEN) {
          int i = this.getLineCount();
          boolean flag = false;
@@ -71,10 +109,26 @@
                      if(l1 > 3) {
                         int i2 = 0;
                         int j2 = -i1 * 9;
-                        drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                        if (!Settings.FASTCHAT) {
+                           if (Settings.SMOOTH_CHAT) {
+                              if (ticksLeft > lowerThreshold && i1 < newLines)
+                                 drawRect(i2, (int) (-i1 * 9 - percentComplete * (-i1 * 9 - (j2 - 9))), i2 + l + 4, (int) (percentComplete * (-i1 * 9 - (j2 - 9))), (int) ((l1 / 2) * percentComplete) << 24);
+                              else
+                                 drawRect(i2, ticksLeft > lowerThreshold ? (int) ((j2 - 9) + 9 - percentComplete * 9) : j2 - 9, i2 + l + 4, ticksLeft > lowerThreshold ? (int) ((j2) + 9 - percentComplete * 9) : j2, l1 / 2 << 24);
+                           }
+                           else drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                        }
                         String s = chatline.getChatComponent().getFormattedText();
                         GlStateManager.enableBlend();
-                        this.mc.fontRendererObj.drawStringWithShadow(s, (float)i2, (float)(j2 - 8), 16777215 + (l1 << 24));
+                        if (Settings.SMOOTH_CHAT) {
+                           if (ticksLeft > lowerThreshold && i1 <= newLines)
+                              this.mc.fontRendererObj.drawStringWithShadow(s, 0, -i1 * 9 - percentComplete * (-i1 * 9 - (j2 - 8)), 16777215 + ((int) (255 * percentComplete) << 24));
+                           else
+                              this.mc.fontRendererObj.drawStringWithShadow(s, (float) i2, ticksLeft > lowerThreshold ? (j2 - 8) + 9 - percentComplete * 9 : j2 - 8, 16777215 + (l1 << 24));
+                        }
+                        else {
+                           this.mc.fontRendererObj.drawStringWithShadow(s, (float) i2, (float) (j2 - 8), 16777215 + (l1 << 24));
+                        }
                         GlStateManager.disableAlpha();
                         GlStateManager.disableBlend();
                      }
@@ -112,6 +166,17 @@
    }
 
    public void printChatMessage(IChatComponent chatComponent) {
+      ChatEvent event = new ChatEvent(chatComponent);
+      EventBus.INSTANCE.post(event);
+      if (event.isCancelled()) {
+         return;
+      } else {
+         if (event.getChat() != chatComponent) {
+            printChatMessageWithOptionalDeletion(event.getChat(), 0);
+            return;
+         }
+      }
+
       this.printChatMessageWithOptionalDeletion(chatComponent, 0);
    }
 
@@ -119,6 +184,8 @@
     * prints the ChatComponent to Chat. If the ID is not 0, deletes an existing Chat Line of that ID from the GUI
     */
    public void printChatMessageWithOptionalDeletion(IChatComponent chatComponent, int chatLineId) {
+      ticksLeft = 200;
+      percentComplete = 0.0F;
       this.setChatLine(chatComponent, chatLineId, this.mc.ingameGUI.getUpdateCounter(), false);
       logger.info("[CHAT] " + chatComponent.getUnformattedText());
    }
@@ -131,6 +198,7 @@
       int i = MathHelper.floor_float((float)this.getChatWidth() / this.getChatScale());
       List<IChatComponent> list = GuiUtilRenderComponents.splitText(chatComponent, i, this.mc.fontRendererObj, false, false);
       boolean flag = this.getChatOpen();
+      newLines = list.size() - 1;
 
       for(IChatComponent ichatcomponent : list) {
          if(flag && this.scrollPos > 0) {
@@ -141,14 +209,14 @@
          this.drawnChatLines.add(0, new ChatLine(updateCounter, ichatcomponent, chatLineId));
       }
 
-      while(this.drawnChatLines.size() > 100) {
+      while(this.drawnChatLines.size() > 500) {
          this.drawnChatLines.remove(this.drawnChatLines.size() - 1);
       }
 
       if(!displayOnly) {
          this.chatLines.add(0, new ChatLine(updateCounter, chatComponent, chatLineId));
 
-         while(this.chatLines.size() > 100) {
+         while(this.chatLines.size() > 500) {
             this.chatLines.remove(this.chatLines.size() - 1);
          }
       }
@@ -318,4 +386,12 @@
    public int getLineCount() {
       return this.getChatHeight() / 9;
    }
+
+   public List<ChatLine> getDrawnChatLines() {
+      return drawnChatLines;
+   }
+
+   public List<ChatLine> getChatLines() {
+      return chatLines;
+   }
 }
