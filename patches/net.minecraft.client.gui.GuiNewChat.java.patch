--- original/net/minecraft/client/gui/GuiNewChat.java
+++ changed/net/minecraft/client/gui/GuiNewChat.java
@@ -1,5 +1,8 @@
 package net.minecraft.client.gui;
 
+import cc.hyperium.config.Settings;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.network.chat.ChatEvent;
 import com.google.common.collect.Lists;
 import java.util.Iterator;
 import java.util.List;
@@ -14,6 +17,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import static cc.hyperium.gui.HyperiumGui.clamp;
+
+// contains https://github.com/HyperiumClient/Hyperium/pull/720/files
 @SideOnly(Side.CLIENT)
 public class GuiNewChat extends Gui {
     private static final Logger logger = LogManager.getLogger();
@@ -23,12 +29,42 @@
     private final List<ChatLine> drawnChatLines = Lists.<ChatLine>newArrayList();
     private int scrollPos;
     private boolean isScrolled;
+    // Hyperium
+    public static float percentComplete = 0;
+    public static int lowerThreshold;
+    public static int topThreshold;
+    public static int ticksLeft = 200;
+    public static int newLines;
+    public static long prevMillis = -1;
 
     public GuiNewChat(Minecraft mcIn) {
         this.mc = mcIn;
+        // hyperium
+        int fifth = 0;
+        lowerThreshold = fifth;
+        topThreshold = ticksLeft - fifth;
     }
+    // hyperium
+    public static void updatePercentage(long diff) {
+        if (percentComplete < 1) percentComplete += 0.004f * diff;
+        percentComplete = clamp(percentComplete, 0, 1);
+    }
 
     public void drawChat(int updateCounter) {
+        // hyperium
+        if (Settings.SMOOTH_CHAT) {
+            if (prevMillis == -1) {
+                prevMillis = System.currentTimeMillis();
+                return;
+            }
+            long current = System.currentTimeMillis();
+            long diff = current - prevMillis;
+            prevMillis = current;
+            updatePercentage(diff);
+        }
+        float t = percentComplete;
+        float percent = 1-(--t)*t*t*t;
+        percent = clamp(percent, 0, 1);
         if (this.mc.gameSettings.chatVisibility != EntityPlayer.EnumChatVisibility.HIDDEN) {
             int i = this.getLineCount();
             boolean flag = false;
@@ -71,10 +107,26 @@
                             if (l1 > 3) {
                                 int i2 = 0;
                                 int j2 = -i1 * 9;
-                                drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                                // Hyperium
+                                if (!Settings.FASTCHAT) {
+                                    if (Settings.SMOOTH_CHAT) {
+                                        drawRect(i2, (int) ((j2 - 9) + 9 - percent * 9), i2 + l + 4, (int) ((j2) + 9 - percent * 9), (l1 / 2) << 24);
+                                    } else {
+                                        drawRect(i2, j2 - 9, i2 + l + 4, j2, l1 / 2 << 24);
+                                    }
+                                }
                                 String s = chatline.getChatComponent().getFormattedText();
                                 GlStateManager.enableBlend();
-                                this.mc.fontRendererObj.drawStringWithShadow(s, (float)i2, (float)(j2 - 8), 16777215 + (l1 << 24));
+                                // Hyperium
+                                if (Settings.SMOOTH_CHAT) {
+                                    if (i1 <= newLines) {
+                                        this.mc.fontRendererObj.drawStringWithShadow(s, 0, -i1 * 9 - percent * (-i1 * 9 - (j2 - 8)), 16777215 + ((int) (255 * percent) << 24));
+                                    } else {
+                                        this.mc.fontRendererObj.drawStringWithShadow(s, (float) i2, (j2 - 8) + 9 - percent * 9, 16777215 + (l1 << 24));
+                                    }
+                                } else {
+                                    this.mc.fontRendererObj.drawStringWithShadow(s, (float) i2, (float) (j2 - 8), 16777215 + (l1 << 24));
+                                }
                                 GlStateManager.disableAlpha();
                                 GlStateManager.disableBlend();
                             }
@@ -113,6 +165,14 @@
     }
 
     public void printChatMessage(IChatComponent chatComponent) {
+        // Hyperium
+        ChatEvent event = new ChatEvent(chatComponent);
+        EventBus.INSTANCE.post(event);
+        if (event.isCancelled()) return;
+        if (event.getChat() != chatComponent) {
+            printChatMessageWithOptionalDeletion(event.getChat(), 0);
+            return;
+        }
         this.printChatMessageWithOptionalDeletion(chatComponent, 0);
     }
 
@@ -120,6 +180,9 @@
      * prints the ChatComponent to Chat. If the ID is not 0, deletes an existing Chat Line of that ID from the GUI
      */
     public void printChatMessageWithOptionalDeletion(IChatComponent chatComponent, int chatLineId) {
+        // Hyperium
+        ticksLeft = 200;
+        percentComplete = 0;
         this.setChatLine(chatComponent, chatLineId, this.mc.ingameGUI.getUpdateCounter(), false);
         logger.info("[CHAT] " + chatComponent.getUnformattedText());
     }
@@ -132,6 +195,7 @@
         int i = MathHelper.floor_float((float)this.getChatWidth() / this.getChatScale());
         List<IChatComponent> list = GuiUtilRenderComponents.splitText(chatComponent, i, this.mc.fontRendererObj, false, false);
         boolean flag = this.getChatOpen();
+        newLines = list.size() - 1; // Hyperium
 
         for (IChatComponent ichatcomponent : list) {
             if (flag && this.scrollPos > 0) {
@@ -142,14 +206,14 @@
             this.drawnChatLines.add(0, new ChatLine(updateCounter, ichatcomponent, chatLineId));
         }
 
-        while (this.drawnChatLines.size() > 100) {
+        while (this.drawnChatLines.size() > 500) { // Hyperium - change to 500
             this.drawnChatLines.remove(this.drawnChatLines.size() - 1);
         }
 
         if (!displayOnly) {
             this.chatLines.add(0, new ChatLine(updateCounter, chatComponent, chatLineId));
 
-            while (this.chatLines.size() > 100) {
+            while (this.chatLines.size() > 500) { // Hyperium - change to 500
                 this.chatLines.remove(this.chatLines.size() - 1);
             }
         }
@@ -321,4 +385,13 @@
     public int getLineCount() {
         return this.getChatHeight() / 9;
     }
+
+    // Hyperium
+    public List<ChatLine> getDrawnChatLines() {
+        return drawnChatLines;
+    }
+
+    public List<ChatLine> getChatLines() {
+        return chatLines;
+    }
 }
