--- original/net/minecraft/client/model/ModelPlayer.java
+++ changed/net/minecraft/client/model/ModelPlayer.java
@@ -1,14 +1,17 @@
 package net.minecraft.client.model;
 
-import net.minecraft.client.model.ModelBiped;
-import net.minecraft.client.model.ModelRenderer;
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.model.PostCopyPlayerModelAnglesEvent;
+import cc.hyperium.event.model.PreCopyPlayerModelAnglesEvent;
+import cc.hyperium.utils.model.IModelPlayer;
+import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.entity.Entity;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ModelPlayer extends ModelBiped {
+public class ModelPlayer extends ModelBiped implements IModelPlayer {
    public ModelRenderer bipedLeftArmwear;
    public ModelRenderer bipedRightArmwear;
    public ModelRenderer bipedLeftLegwear;
@@ -18,51 +21,165 @@
    private ModelRenderer bipedDeadmau5Head;
    private boolean smallArms;
 
-   public ModelPlayer(float p_i46304_1_, boolean p_i46304_2_) {
-      super(p_i46304_1_, 0.0F, 64, 64);
-      this.smallArms = p_i46304_2_;
+   private ModelRenderer bipedLeftForeArmwear;
+   private ModelRenderer bipedRightForeArmwear;
+   private ModelRenderer bipedLeftLowerLegwear;
+   private ModelRenderer bipedRightLowerLegwear;
+
+   private ModelRenderer butt;
+
+   public ModelPlayer(float modelSize, boolean useSmallArms) {
+      super(modelSize, 0.0F, 64, 64);
+      this.smallArms = useSmallArms;
       this.bipedDeadmau5Head = new ModelRenderer(this, 24, 0);
-      this.bipedDeadmau5Head.addBox(-3.0F, -6.0F, -1.0F, 6, 6, 1, p_i46304_1_);
+      this.bipedDeadmau5Head.addBox(-3.0F, -6.0F, -1.0F, 6, 6, 1, modelSize);
       this.bipedCape = new ModelRenderer(this, 0, 0);
       this.bipedCape.setTextureSize(64, 32);
-      this.bipedCape.addBox(-5.0F, 0.0F, -1.0F, 10, 16, 1, p_i46304_1_);
-      if(p_i46304_2_) {
+      this.bipedCape.addBox(-5.0F, 0.0F, -1.0F, 10, 16, 1, modelSize);
+      if(useSmallArms) {
          this.bipedLeftArm = new ModelRenderer(this, 32, 48);
-         this.bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 3, 12, 4, p_i46304_1_);
+         this.bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 3, 12, 4, modelSize);
          this.bipedLeftArm.setRotationPoint(5.0F, 2.5F, 0.0F);
          this.bipedRightArm = new ModelRenderer(this, 40, 16);
-         this.bipedRightArm.addBox(-2.0F, -2.0F, -2.0F, 3, 12, 4, p_i46304_1_);
+         this.bipedRightArm.addBox(-2.0F, -2.0F, -2.0F, 3, 12, 4, modelSize);
          this.bipedRightArm.setRotationPoint(-5.0F, 2.5F, 0.0F);
          this.bipedLeftArmwear = new ModelRenderer(this, 48, 48);
-         this.bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 3, 12, 4, p_i46304_1_ + 0.25F);
+         this.bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 3, 12, 4, modelSize + 0.25F);
          this.bipedLeftArmwear.setRotationPoint(5.0F, 2.5F, 0.0F);
          this.bipedRightArmwear = new ModelRenderer(this, 40, 32);
-         this.bipedRightArmwear.addBox(-2.0F, -2.0F, -2.0F, 3, 12, 4, p_i46304_1_ + 0.25F);
+         this.bipedRightArmwear.addBox(-2.0F, -2.0F, -2.0F, 3, 12, 4, modelSize + 0.25F);
          this.bipedRightArmwear.setRotationPoint(-5.0F, 2.5F, 10.0F);
       } else {
          this.bipedLeftArm = new ModelRenderer(this, 32, 48);
-         this.bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, p_i46304_1_);
+         this.bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, modelSize);
          this.bipedLeftArm.setRotationPoint(5.0F, 2.0F, 0.0F);
          this.bipedLeftArmwear = new ModelRenderer(this, 48, 48);
-         this.bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, p_i46304_1_ + 0.25F);
+         this.bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, modelSize + 0.25F);
          this.bipedLeftArmwear.setRotationPoint(5.0F, 2.0F, 0.0F);
          this.bipedRightArmwear = new ModelRenderer(this, 40, 32);
-         this.bipedRightArmwear.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4, p_i46304_1_ + 0.25F);
+         this.bipedRightArmwear.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4, modelSize + 0.25F);
          this.bipedRightArmwear.setRotationPoint(-5.0F, 2.0F, 10.0F);
       }
 
       this.bipedLeftLeg = new ModelRenderer(this, 16, 48);
-      this.bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i46304_1_);
+      this.bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, modelSize);
       this.bipedLeftLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
       this.bipedLeftLegwear = new ModelRenderer(this, 0, 48);
-      this.bipedLeftLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i46304_1_ + 0.25F);
+      this.bipedLeftLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, modelSize + 0.25F);
       this.bipedLeftLegwear.setRotationPoint(1.9F, 12.0F, 0.0F);
       this.bipedRightLegwear = new ModelRenderer(this, 0, 32);
-      this.bipedRightLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i46304_1_ + 0.25F);
+      this.bipedRightLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, modelSize + 0.25F);
       this.bipedRightLegwear.setRotationPoint(-1.9F, 12.0F, 0.0F);
       this.bipedBodyWear = new ModelRenderer(this, 16, 32);
-      this.bipedBodyWear.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, p_i46304_1_ + 0.25F);
+      this.bipedBodyWear.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, modelSize + 0.25F);
       this.bipedBodyWear.setRotationPoint(0.0F, 0.0F, 0.0F);
+
+      if (useSmallArms) {
+         bipedLeftArm = new ModelRenderer(this, 32, 48);
+         bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 3, 6, 4, modelSize);
+         bipedLeftArm.setRotationPoint(5.0F, 2.5F, 0.0F);
+         bipedLeftForeArm = new ModelRenderer(this, 32, 54);
+         bipedLeftForeArm.addBox(-1.0F, 4.0F, -2.0F, 3, 6, 4, modelSize);
+         bipedLeftForeArm.setRotationPoint(5.0F, 2.5F, 0.0F);
+
+
+         bipedLeftArmwear = new ModelRenderer(this, 48, 48);
+         bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 3, 6, 4, modelSize + 0.25F);
+         bipedLeftArmwear.setRotationPoint(5.0F, 2.5F, 0.0F);
+         bipedLeftForeArmwear = new ModelRenderer(this, 48, 54);
+         bipedLeftForeArmwear.addBox(-1.0F, 4.0F, -2.0F, 3, 6, 4, modelSize + 0.25F);
+         bipedLeftForeArmwear.setRotationPoint(5.0F, 2.5F, 0.0F);
+
+         bipedRightArm = new ModelRenderer(this, 40, 16);
+         bipedRightArm.addBox(-2.0F, -2.0F, -2.0F, 3, 6, 4, modelSize);
+         bipedRightArm.setRotationPoint(-5.0F, 2.5F, 0.0F);
+         bipedRightForeArm = new ModelRenderer(this, 40, 22);
+         bipedRightForeArm.addBox(-2.0F, 4.0F, -2.0F, 3, 6, 4, modelSize);
+         bipedRightForeArm.setRotationPoint(-5.0F, 2.5F, 0.0F);
+
+
+         bipedRightArmwear = new ModelRenderer(this, 40, 32);
+         bipedRightArmwear.addBox(-2.0F, -2.0F, -2.0F, 3, 6, 4, modelSize + 0.25F);
+         bipedRightArmwear.setRotationPoint(-5.0F, 2.5F, 10.0F);
+
+         bipedRightForeArmwear = new ModelRenderer(this, 40, 38);
+         bipedRightForeArmwear.addBox(-2.0F, 4.0F, -2.0F, 3, 6, 4, modelSize + 0.25F);
+         bipedRightForeArmwear.setRotationPoint(-5.0F, 2.5F, 10.0F);
+
+
+      } else {
+         bipedLeftArm = new ModelRenderer(this, 32, 48);
+         bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 6, 4, modelSize);
+         bipedLeftArm.setRotationPoint(5.0F, 2.0F, 0.0F);
+         bipedLeftForeArm = new ModelRenderer(this, 32, 54);
+         bipedLeftForeArm.addBox(-1.0F, 4.0F, -2.0F, 4, 6, 4, modelSize);
+         bipedLeftForeArm.setRotationPoint(5.0F, 2.0F, 0.0F);
+
+
+         bipedLeftArmwear = new ModelRenderer(this, 48, 48);
+         bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+         bipedLeftArmwear.setRotationPoint(5.0F, 2.0F, 0.0F);
+         bipedLeftForeArmwear = new ModelRenderer(this, 48, 54);
+         bipedLeftForeArmwear.addBox(-1.0F, 4.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+         bipedLeftForeArmwear.setRotationPoint(5.0F, 2.0F, 0.0F);
+
+         bipedRightArm = new ModelRenderer(this, 40, 16);
+         bipedRightArm.addBox(-3.0F, -2.0F, -2.0F, 4, 6, 4, modelSize);
+         bipedRightArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
+         bipedRightForeArm = new ModelRenderer(this, 40, 22);
+         bipedRightForeArm.addBox(-3.0F, 4.0F, -2.0F, 4, 6, 4, modelSize);
+         bipedRightForeArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
+
+
+         bipedRightArmwear = new ModelRenderer(this, 40, 32);
+         bipedRightArmwear.addBox(-3.0F, -2.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+         bipedRightArmwear.setRotationPoint(-5.0F, 2.0F, 10.0F);
+
+         bipedRightForeArmwear = new ModelRenderer(this, 40, 38);
+         bipedRightForeArmwear.addBox(-3.0F, 4.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+         bipedRightForeArmwear.setRotationPoint(-5.0F, 2.0F, 10.0F);
+      }
+
+      butt = new ModelRenderer(this, 16, 16 + 8);
+      butt.addBox(-4.0F, 0.0F, 0.0F, 8, 4, 4, modelSize);
+      butt.setRotationPoint(0, 16, 0);
+      butt.showModel = false;
+
+      bipedLeftLeg = new ModelRenderer(this, 16, 48);
+      bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, modelSize);
+      bipedLeftLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
+      bipedLeftLowerLeg = new ModelRenderer(this, 16, 54);
+      bipedLeftLowerLeg.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, modelSize);
+      bipedLeftLowerLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
+
+      bipedLeftLegwear = new ModelRenderer(this, 0, 48);
+      bipedLeftLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+      bipedLeftLegwear.setRotationPoint(1.9F, 12.0F, 0.0F);
+      bipedLeftLowerLegwear = new ModelRenderer(this, 0, 54);
+      bipedLeftLowerLegwear.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+      bipedLeftLowerLegwear.setRotationPoint(1.9F, 12.0F, 0.0F);
+
+      bipedRightLeg = new ModelRenderer(this, 0, 16);
+      bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, modelSize);
+      bipedRightLeg.setRotationPoint(-1.9F, 12.0F, 0.0F);
+      bipedRightLowerLeg = new ModelRenderer(this, 0, 22);
+      bipedRightLowerLeg.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, modelSize);
+      bipedRightLowerLeg.setRotationPoint(-1.9F, 12.0F, 0.0F);
+
+      bipedRightLegwear = new ModelRenderer(this, 0, 32);
+      bipedRightLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+      bipedRightLegwear.setRotationPoint(-1.9F, 12.0F, 0.0F);
+      bipedRightLowerLegwear = new ModelRenderer(this, 0, 38);
+      bipedRightLowerLegwear.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, modelSize + 0.25F);
+      bipedRightLowerLegwear.setRotationPoint(-1.9F, 12.0F, 0.0F);
+
+      butt.showModel = false;
+      fixTopAndBottomOfLimbWrongTextures(
+              bipedLeftForeArm, bipedLeftForeArmwear,
+              bipedRightForeArm, bipedRightForeArmwear,
+              bipedLeftLowerLeg, bipedLeftLowerLegwear,
+              bipedRightLowerLeg, bipedRightLowerLegwear
+      );
    }
 
    /**
@@ -71,27 +188,30 @@
    public void render(Entity entityIn, float p_78088_2_, float p_78088_3_, float p_78088_4_, float p_78088_5_, float p_78088_6_, float scale) {
       super.render(entityIn, p_78088_2_, p_78088_3_, p_78088_4_, p_78088_5_, p_78088_6_, scale);
       GlStateManager.pushMatrix();
-      if(this.isChild) {
+
+      if (isChild) {
          float f = 2.0F;
          GlStateManager.scale(1.0F / f, 1.0F / f, 1.0F / f);
          GlStateManager.translate(0.0F, 24.0F * scale, 0.0F);
-         this.bipedLeftLegwear.render(scale);
-         this.bipedRightLegwear.render(scale);
-         this.bipedLeftArmwear.render(scale);
-         this.bipedRightArmwear.render(scale);
-         this.bipedBodyWear.render(scale);
       } else {
-         if(entityIn.isSneaking()) {
-            GlStateManager.translate(0.0F, 0.2F, 0.0F);
-         }
-
-         this.bipedLeftLegwear.render(scale);
-         this.bipedRightLegwear.render(scale);
-         this.bipedLeftArmwear.render(scale);
-         this.bipedRightArmwear.render(scale);
-         this.bipedBodyWear.render(scale);
+         if (entityIn.isSneaking()) GlStateManager.translate(0.0F, 0.2F, 0.0F);
       }
 
+      bipedLeftLegwear.render(scale);
+      bipedRightLegwear.render(scale);
+      bipedLeftArmwear.render(scale);
+      bipedRightArmwear.render(scale);
+      bipedBodyWear.render(scale);
+      bipedLeftForeArmwear.render(scale);
+      bipedLeftForeArm.render(scale);
+      bipedRightForeArmwear.render(scale);
+      bipedRightForeArm.render(scale);
+      bipedLeftLowerLeg.render(scale);
+      bipedLeftLowerLegwear.render(scale);
+      bipedRightLowerLeg.render(scale);
+      bipedRightLowerLegwear.render(scale);
+      butt.render(scale);
+
       GlStateManager.popMatrix();
    }
 
@@ -124,16 +244,38 @@
          this.bipedCape.rotationPointY = 0.0F;
       }
 
+      if (entityIn instanceof AbstractClientPlayer) {
+         EventBus.INSTANCE.post(new PreCopyPlayerModelAnglesEvent(((AbstractClientPlayer) entityIn), this));
+      }
+
+      copyModelAnglesAndOffest(bipedLeftArm, bipedLeftForeArm);
+      copyModelAnglesAndOffest(bipedRightArm, bipedRightForeArm);
+      copyModelAnglesAndOffest(bipedLeftArmwear, bipedLeftForeArmwear);
+      copyModelAnglesAndOffest(bipedRightArmwear, bipedRightForeArmwear);
+
+      copyModelAnglesAndOffest(bipedLeftLeg, bipedLeftLowerLeg);
+      copyModelAnglesAndOffest(bipedRightLeg, bipedRightLowerLeg);
+      copyModelAnglesAndOffest(bipedLeftLegwear, bipedLeftLowerLegwear);
+      copyModelAnglesAndOffest(bipedRightLegwear, bipedRightLowerLegwear);
+
+      if (entityIn instanceof AbstractClientPlayer) {
+         EventBus.INSTANCE.post(new PostCopyPlayerModelAnglesEvent(((AbstractClientPlayer) entityIn), this));
+      }
+
    }
 
    public void renderRightArm() {
       this.bipedRightArm.render(0.0625F);
       this.bipedRightArmwear.render(0.0625F);
+      bipedRightForeArm.render(0.0625F);
+      bipedRightForeArmwear.render(0.0625F);
    }
 
    public void renderLeftArm() {
       this.bipedLeftArm.render(0.0625F);
       this.bipedLeftArmwear.render(0.0625F);
+      bipedLeftForeArm.render(0.0625F);
+      bipedLeftForeArmwear.render(0.0625F);
    }
 
    public void setInvisible(boolean invisible) {
@@ -145,6 +287,12 @@
       this.bipedBodyWear.showModel = invisible;
       this.bipedCape.showModel = invisible;
       this.bipedDeadmau5Head.showModel = invisible;
+
+      bipedLeftForeArmwear.showModel = invisible;
+      bipedRightForeArmwear.showModel = invisible;
+      bipedLeftLowerLegwear.showModel = invisible;
+      bipedRightLowerLegwear.showModel = invisible;
+      butt.showModel = invisible;
    }
 
    public void postRenderArm(float scale) {
@@ -157,4 +305,64 @@
       }
 
    }
+
+   @Override
+   public ModelRenderer getButt() {
+      return butt;
+   }
+
+   /* Right leg wrappers */
+   @Override
+   public ModelRenderer getBipedRightUpperLegwear() {
+      return bipedRightLegwear;
+   }
+
+   @Override
+   public ModelRenderer getBipedRightLowerLegwear() {
+      return bipedRightLowerLegwear;
+   }
+
+   /* Left leg wrappers */
+   @Override
+   public ModelRenderer getBipedLeftUpperLegwear() {
+      return bipedLeftLegwear;
+   }
+
+   @Override
+   public ModelRenderer getBipedLeftLowerLegwear() {
+      return bipedLeftLowerLegwear;
+   }
+
+   /* Right arm wrappers */
+   @Override
+   public ModelRenderer getBipedRightUpperArmwear() {
+      return bipedRightArmwear;
+   }
+
+   @Override
+   public ModelRenderer getBipedRightForeArmwear() {
+      return bipedRightForeArmwear;
+   }
+
+   /* Left arm wrappers */
+   @Override
+   public ModelRenderer getBipedLeftUpperArmwear() {
+      return bipedLeftArmwear;
+   }
+
+   @Override
+   public ModelRenderer getBipedLeftForeArmwear() {
+      return bipedLeftForeArmwear;
+   }
+
+   /* Body wrappers */
+   @Override
+   public ModelRenderer getBipedBodywear() {
+      return bipedBodyWear;
+   }
+
+   @Override
+   public ModelRenderer getCape() {
+      return bipedCape;
+   }
 }
