--- original/net/minecraft/client/model/ModelPlayer.java
+++ changed/net/minecraft/client/model/ModelPlayer.java
@@ -1,12 +1,17 @@
 package net.minecraft.client.model;
 
+import cc.hyperium.event.EventBus;
+import cc.hyperium.event.model.PostCopyPlayerModelAnglesEvent;
+import cc.hyperium.event.model.PreCopyPlayerModelAnglesEvent;
+import cc.hyperium.utils.model.IModelPlayer;
+import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.entity.Entity;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ModelPlayer extends ModelBiped {
+public class ModelPlayer extends ModelBiped implements IModelPlayer {
     public ModelRenderer bipedLeftArmwear;
     public ModelRenderer bipedRightArmwear;
     public ModelRenderer bipedLeftLegwear;
@@ -16,6 +21,13 @@
     private ModelRenderer bipedDeadmau5Head;
     private boolean smallArms;
 
+    private ModelRenderer bipedLeftForeArmwear;
+    private ModelRenderer bipedRightForeArmwear;
+    private ModelRenderer bipedLeftLowerLegwear;
+    private ModelRenderer bipedRightLowerLegwear;
+
+    private ModelRenderer butt;
+
     public ModelPlayer(float p_i46304_1_, boolean p_i46304_2_) {
         super(p_i46304_1_, 0.0F, 64, 64);
         this.smallArms = p_i46304_2_;
@@ -62,6 +74,107 @@
         this.bipedBodyWear = new ModelRenderer(this, 16, 32);
         this.bipedBodyWear.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, p_i46304_1_ + 0.25F);
         this.bipedBodyWear.setRotationPoint(0.0F, 0.0F, 0.0F);
+
+        if (p_i46304_2_) {
+            bipedLeftArm = new ModelRenderer(this, 32, 48);
+            bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 3, 6, 4, p_i46304_1_);
+            bipedLeftArm.setRotationPoint(5.0F, 2.5F, 0.0F);
+            bipedLeftForeArm = new ModelRenderer(this, 32, 54);
+            bipedLeftForeArm.addBox(-1.0F, 4.0F, -2.0F, 3, 6, 4, p_i46304_1_);
+            bipedLeftForeArm.setRotationPoint(5.0F, 2.5F, 0.0F);
+
+            bipedLeftArmwear = new ModelRenderer(this, 48, 48);
+            bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 3, 6, 4, p_i46304_1_ + 0.25F);
+            bipedLeftArmwear.setRotationPoint(5.0F, 2.5F, 0.0F);
+            bipedLeftForeArmwear = new ModelRenderer(this, 48, 54);
+            bipedLeftForeArmwear.addBox(-1.0F, 4.0F, -2.0F, 3, 6, 4, p_i46304_1_ + 0.25F);
+            bipedLeftForeArmwear.setRotationPoint(5.0F, 2.5F, 0.0F);
+
+            bipedRightArm = new ModelRenderer(this, 40, 16);
+            bipedRightArm.addBox(-2.0F, -2.0F, -2.0F, 3, 6, 4, p_i46304_1_);
+            bipedRightArm.setRotationPoint(-5.0F, 2.5F, 0.0F);
+            bipedRightForeArm = new ModelRenderer(this, 40, 22);
+            bipedRightForeArm.addBox(-2.0F, 4.0F, -2.0F, 3, 6, 4, p_i46304_1_);
+            bipedRightForeArm.setRotationPoint(-5.0F, 2.5F, 0.0F);
+
+            bipedRightArmwear = new ModelRenderer(this, 40, 32);
+            bipedRightArmwear.addBox(-2.0F, -2.0F, -2.0F, 3, 6, 4, p_i46304_1_ + 0.25F);
+            bipedRightArmwear.setRotationPoint(-5.0F, 2.5F, 10.0F);
+
+            bipedRightForeArmwear = new ModelRenderer(this, 40, 38);
+            bipedRightForeArmwear.addBox(-2.0F, 4.0F, -2.0F, 3, 6, 4, p_i46304_1_ + 0.25F);
+            bipedRightForeArmwear.setRotationPoint(-5.0F, 2.5F, 10.0F);
+        } else {
+            bipedLeftArm = new ModelRenderer(this, 32, 48);
+            bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+            bipedLeftArm.setRotationPoint(5.0F, 2.0F, 0.0F);
+            bipedLeftForeArm = new ModelRenderer(this, 32, 54);
+            bipedLeftForeArm.addBox(-1.0F, 4.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+            bipedLeftForeArm.setRotationPoint(5.0F, 2.0F, 0.0F);
+
+            bipedLeftArmwear = new ModelRenderer(this, 48, 48);
+            bipedLeftArmwear.addBox(-1.0F, -2.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+            bipedLeftArmwear.setRotationPoint(5.0F, 2.0F, 0.0F);
+            bipedLeftForeArmwear = new ModelRenderer(this, 48, 54);
+            bipedLeftForeArmwear.addBox(-1.0F, 4.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+            bipedLeftForeArmwear.setRotationPoint(5.0F, 2.0F, 0.0F);
+
+            bipedRightArm = new ModelRenderer(this, 40, 16);
+            bipedRightArm.addBox(-3.0F, -2.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+            bipedRightArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
+            bipedRightForeArm = new ModelRenderer(this, 40, 22);
+            bipedRightForeArm.addBox(-3.0F, 4.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+            bipedRightForeArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
+
+            bipedRightArmwear = new ModelRenderer(this, 40, 32);
+            bipedRightArmwear.addBox(-3.0F, -2.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+            bipedRightArmwear.setRotationPoint(-5.0F, 2.0F, 10.0F);
+
+            bipedRightForeArmwear = new ModelRenderer(this, 40, 38);
+            bipedRightForeArmwear.addBox(-3.0F, 4.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+            bipedRightForeArmwear.setRotationPoint(-5.0F, 2.0F, 10.0F);
+        }
+
+        butt = new ModelRenderer(this, 16, 16 + 8);
+        butt.addBox(-4.0F, 0.0F, 0.0F, 8, 4, 4, p_i46304_1_);
+        butt.setRotationPoint(0, 16, 0);
+        butt.showModel = false;
+
+        bipedLeftLeg = new ModelRenderer(this, 16, 48);
+        bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+        bipedLeftLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
+        bipedLeftLowerLeg = new ModelRenderer(this, 16, 54);
+        bipedLeftLowerLeg.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+        bipedLeftLowerLeg.setRotationPoint(1.9F, 12.0F, 0.0F);
+
+        bipedLeftLegwear = new ModelRenderer(this, 0, 48);
+        bipedLeftLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+        bipedLeftLegwear.setRotationPoint(1.9F, 12.0F, 0.0F);
+        bipedLeftLowerLegwear = new ModelRenderer(this, 0, 54);
+        bipedLeftLowerLegwear.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+        bipedLeftLowerLegwear.setRotationPoint(1.9F, 12.0F, 0.0F);
+
+        bipedRightLeg = new ModelRenderer(this, 0, 16);
+        bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+        bipedRightLeg.setRotationPoint(-1.9F, 12.0F, 0.0F);
+        bipedRightLowerLeg = new ModelRenderer(this, 0, 22);
+        bipedRightLowerLeg.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, p_i46304_1_);
+        bipedRightLowerLeg.setRotationPoint(-1.9F, 12.0F, 0.0F);
+
+        bipedRightLegwear = new ModelRenderer(this, 0, 32);
+        bipedRightLegwear.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+        bipedRightLegwear.setRotationPoint(-1.9F, 12.0F, 0.0F);
+        bipedRightLowerLegwear = new ModelRenderer(this, 0, 38);
+        bipedRightLowerLegwear.addBox(-2.0F, 6.0F, -2.0F, 4, 6, 4, p_i46304_1_ + 0.25F);
+        bipedRightLowerLegwear.setRotationPoint(-1.9F, 12.0F, 0.0F);
+
+        butt.showModel = false;
+        fixTopAndBottomOfLimbWrongTextures(
+            bipedLeftForeArm, bipedLeftForeArmwear,
+            bipedRightForeArm, bipedRightForeArmwear,
+            bipedLeftLowerLeg, bipedLeftLowerLegwear,
+            bipedRightLowerLeg, bipedRightLowerLegwear
+        );
     }
 
     /**
@@ -75,23 +188,27 @@
             float f = 2.0F;
             GlStateManager.scale(1.0F / f, 1.0F / f, 1.0F / f);
             GlStateManager.translate(0.0F, 24.0F * scale, 0.0F);
-            this.bipedLeftLegwear.render(scale);
-            this.bipedRightLegwear.render(scale);
-            this.bipedLeftArmwear.render(scale);
-            this.bipedRightArmwear.render(scale);
-            this.bipedBodyWear.render(scale);
         } else {
             if (entityIn.isSneaking()) {
                 GlStateManager.translate(0.0F, 0.2F, 0.0F);
             }
-
-            this.bipedLeftLegwear.render(scale);
-            this.bipedRightLegwear.render(scale);
-            this.bipedLeftArmwear.render(scale);
-            this.bipedRightArmwear.render(scale);
-            this.bipedBodyWear.render(scale);
         }
 
+        bipedLeftLegwear.render(scale);
+        bipedRightLegwear.render(scale);
+        bipedLeftArmwear.render(scale);
+        bipedRightArmwear.render(scale);
+        bipedBodyWear.render(scale);
+        bipedLeftForeArmwear.render(scale);
+        bipedLeftForeArm.render(scale);
+        bipedRightForeArmwear.render(scale);
+        bipedRightForeArm.render(scale);
+        bipedLeftLowerLeg.render(scale);
+        bipedLeftLowerLegwear.render(scale);
+        bipedRightLowerLeg.render(scale);
+        bipedRightLowerLegwear.render(scale);
+        butt.render(scale);
+
         GlStateManager.popMatrix();
     }
 
@@ -124,16 +241,38 @@
         } else {
             this.bipedCape.rotationPointY = 0.0F;
         }
+
+        if (entityIn instanceof AbstractClientPlayer) {
+            EventBus.INSTANCE.post(new PreCopyPlayerModelAnglesEvent(((AbstractClientPlayer) entityIn), this));
+        }
+
+        copyModelAnglesAndOffest(bipedLeftArm, bipedLeftForeArm);
+        copyModelAnglesAndOffest(bipedRightArm, bipedRightForeArm);
+        copyModelAnglesAndOffest(bipedLeftArmwear, bipedLeftForeArmwear);
+        copyModelAnglesAndOffest(bipedRightArmwear, bipedRightForeArmwear);
+
+        copyModelAnglesAndOffest(bipedLeftLeg, bipedLeftLowerLeg);
+        copyModelAnglesAndOffest(bipedRightLeg, bipedRightLowerLeg);
+        copyModelAnglesAndOffest(bipedLeftLegwear, bipedLeftLowerLegwear);
+        copyModelAnglesAndOffest(bipedRightLegwear, bipedRightLowerLegwear);
+
+        if (entityIn instanceof AbstractClientPlayer) {
+            EventBus.INSTANCE.post(new PostCopyPlayerModelAnglesEvent(((AbstractClientPlayer) entityIn), this));
+        }
     }
 
     public void renderRightArm() {
         this.bipedRightArm.render(0.0625F);
         this.bipedRightArmwear.render(0.0625F);
+        bipedRightForeArm.render(0.0625F);
+        bipedRightForeArmwear.render(0.0625F);
     }
 
     public void renderLeftArm() {
         this.bipedLeftArm.render(0.0625F);
         this.bipedLeftArmwear.render(0.0625F);
+        bipedLeftForeArm.render(0.0625F);
+        bipedLeftForeArmwear.render(0.0625F);
     }
 
     public void setInvisible(boolean invisible) {
@@ -145,6 +284,12 @@
         this.bipedBodyWear.showModel = invisible;
         this.bipedCape.showModel = invisible;
         this.bipedDeadmau5Head.showModel = invisible;
+
+        bipedLeftForeArmwear.showModel = invisible;
+        bipedRightForeArmwear.showModel = invisible;
+        bipedLeftLowerLegwear.showModel = invisible;
+        bipedRightLowerLegwear.showModel = invisible;
+        butt.showModel = invisible;
     }
 
     public void postRenderArm(float scale) {
@@ -156,4 +301,59 @@
             this.bipedRightArm.postRender(scale);
         }
     }
+
+    @Override
+    public ModelRenderer getButt() {
+        return butt;
+    }
+
+    @Override
+    public ModelRenderer getBipedRightUpperLegwear() {
+        return bipedRightLegwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedRightLowerLegwear() {
+        return bipedRightLowerLegwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedLeftUpperLegwear() {
+        return bipedLeftLegwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedLeftLowerLegwear() {
+        return bipedLeftLowerLegwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedRightUpperArmwear() {
+        return bipedRightArmwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedRightForeArmwear() {
+        return bipedRightForeArmwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedLeftUpperArmwear() {
+        return bipedLeftArmwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedLeftForeArmwear() {
+        return bipedLeftForeArmwear;
+    }
+
+    @Override
+    public ModelRenderer getBipedBodywear() {
+        return bipedBodyWear;
+    }
+
+    @Override
+    public ModelRenderer getCape() {
+        return bipedCape;
+    }
 }
